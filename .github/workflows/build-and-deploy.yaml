name: Build & Deploy (Vite + Go injector)

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}
  schedule:
    # Update hourly, on the hour (UTC)
    - cron: "0 * * * *"

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  # Don’t overlap deployments to Pages
  group: pages-${{ github.ref }}
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: cashsite/package-lock.json

      - name: Install deps (Vite)
        working-directory: cashsite
        run: npm ci

      - name: Build Vite site
        working-directory: cashsite
        run: npm run build

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      # Optional: show what was built (debug)
      - name: List build output
        run: ls -lah cashsite/dist

      # ---- Go injector with retries ----
      - name: Inject pool data (retry up to 3 times)
        id: inject
        env:
          API_KEY: ${{ secrets.CARDANOSCAN_API_KEY }}
        run: |
          set -u
          ok="false"
          for i in 1 2 3; do
            echo "Attempt $i: go run main.go"
            if go run main.go; then
              ok="true"
              break
            fi
            echo "Injector failed; sleeping 30s before retry…"
            sleep 30
          done
          echo "ok=$ok" >> "$GITHUB_OUTPUT"

      # Only validate placeholder replacement if injector succeeded
      - name: Ensure placeholder replaced
        if: steps.inject.outputs.ok == 'true'
        run: |
          if grep -q "__POOL_DATA_JSON__" cashsite/dist/index.html; then
            echo "ERROR: Placeholder not replaced." >&2
            exit 1
          fi
          echo "Placeholder replaced ✅"

      # If injection succeeded, upload new artifact for Pages
      - name: Upload Pages artifact
        if: steps.inject.outputs.ok == 'true'
        uses: actions/upload-pages-artifact@v3
        with:
          path: cashsite/dist
          retention-days: 7

  deploy:
    # Only run deploy if an artifact was uploaded by build job
    needs: build
    if: needs.build.outputs != '' || always()
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4